/* assets/css/components/interactive-carousel.css */

.options-container {
    width: 100%;
    max-width: var(--container-default);
    opacity: 0; /* Start hidden */
    position: relative;
    transition: opacity 0.75s ease 0.3s; /* Fade in after typing */
    text-align: left;
    margin-top: var(--space-md); /* Space below typing text */
    padding-bottom: 4rem; /* Space for controls */
}

.options-container.visible {
    opacity: 1;
}

.carousel-items-wrapper {
    position: relative;
    /* Use fixed height to prevent layout shifts */
    height: 6rem; /* Adjust this based on tallest item content */
    /* min-height: 7em; */ /* Replaced min-height with fixed height */
    transition: height 0.4s ease; /* Smooth height change ONLY if expanding */
    overflow: hidden; /* Helps contain absolutely positioned elements */
}

.carousel-item {
    position: absolute; /* Keep absolute for stacking */
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0; /* Start invisible */
    pointer-events: none; /* Prevent interaction when invisible */
    z-index: 1;
    /* Overall item fade out */
    transition: opacity 0.5s ease-in-out; /* Duration for fade OUT */
}

.carousel-item.active {
    opacity: 1; /* Becomes visible when active */
    pointer-events: auto;
    z-index: 2;
    /* No position change needed if always absolute */
    /* position: relative; */
     /* Override overall item transition for fade IN */
    transition: none; /* Fade-in handled by prompt/link */
}

/* Prompt and Link styles */
.carousel-prompt {
    font-size: var(--text-md);
    font-weight: var(--font-light);
    color: var(--neutral-700);
    line-height: var(--leading-relaxed);
    margin-bottom: var(--space-xs);
    padding-left: 1.2rem;
    position: relative;
    display: block;
    /* Prompt-specific animation */
    opacity: 0;
    transform: translateY(8px);
    transition: opacity 0.6s ease-out, transform 0.5s ease-out;
}

.carousel-prompt::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.2em;
    bottom: 0.2em;
    width: 2px;
    background-color: var(--neutral-300);
    opacity: 0.8;
}

.carousel-link {
    display: inline-block;
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    color: var(--primary);
    text-decoration: none;
    position: relative;
    padding-bottom: 2px;
    border-bottom: 1px solid transparent;
    /* Link-specific animation */
    opacity: 0;
    transform: translateY(5px);
     /* Add delay for link fade-in */
    transition: opacity 0.6s ease-out 0.4s, transform 0.5s ease-out 0.4s, color var(--transition-normal), border-color var(--transition-normal); /* 0.4s delay */
}

.carousel-link:hover {
    color: var(--primary-dark);
    border-bottom-color: var(--primary-dark);
}

/* Animation Trigger: When item becomes active, animate prompt and link */
.carousel-item.active .carousel-prompt,
.carousel-item.active .carousel-link {
    opacity: 1;
    transform: translateY(0);
}

/* Reset transitions when item is no longer active (for clean fade-out) */
.carousel-item:not(.active) .carousel-prompt,
.carousel-item:not(.active) .carousel-link {
     /* Remove individual transitions to let parent item fade out smoothly */
    transition: none;
    opacity: 0; /* Instantly hide content when parent starts fading */
}


/* Controls Styling */
.carousel-controls {
    display: flex;
    align-items: center;
    justify-content: left;
    gap: var(--space-sm);
    opacity: 0;
    transition: opacity 0.5s ease 0.2s;
    bottom: 0;
    left: 0;
    width: 100%;
}

.options-container.visible .carousel-controls {
    opacity: 1;
}

.control-btn {
    background-color: transparent;
    border: 1px solid var(--neutral-300);
    color: var(--neutral-600);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: inline-flex; /* Use inline-flex */
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color var(--transition-fast), color var(--transition-fast), border-color var(--transition-fast), transform var(--transition-fast), opacity var(--transition-fast); /* Added opacity transition */
    padding: 0;
    opacity: 1; /* Ensure buttons are opaque by default */
    pointer-events: auto; /* Ensure clickable by default */
}

.control-btn:hover {
    background-color: var(--neutral-100);
    color: var(--primary);
    border-color: var(--primary);
}

.control-btn:active {
    transform: scale(0.95);
}

.control-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.control-btn .icon {
    width: 20px;
    height: 20px;
}

/* Pause/Play Icon Toggling - Explicitly target icons */
.control-btn.pause-play-btn .play-icon {
    display: none;
}
.control-btn.pause-play-btn .pause-icon {
    display: inline-block; /* Default */
}
.control-btn.pause-play-btn.paused .play-icon {
    display: inline-block;
}
.control-btn.pause-play-btn.paused .pause-icon {
    display: none;
}

/* Expanded State Styling */
.options-container.expanded .carousel-items-wrapper {
    height: auto; /* Let content define height */
    min-height: unset; /* Override min-height */
    overflow: visible;
}
.options-container.expanded .carousel-item {
    position: relative; /* Stack items vertically */
    opacity: 1;
    pointer-events: auto;
    transform: translateY(0);
    margin-bottom: var(--space-md);
    transition: none !important; /* Ensure no transition when expanded */
}
.options-container.expanded .carousel-item .carousel-prompt,
.options-container.expanded .carousel-item .carousel-link {
    opacity: 1;
    transform: translateY(0);
    transition: none;
}
.options-container.expanded .carousel-item:last-child { margin-bottom: 0; }

/* Explicitly hide specific buttons when expanded using opacity */
.options-container.expanded .control-btn.prev-btn,
.options-container.expanded .control-btn.next-btn,
.options-container.expanded .control-btn.pause-play-btn {
    opacity: 0 !important; /* Use !important for override if needed */
    pointer-events: none !important;
}

/* Ensure other buttons remain visible when *not* expanded */
.options-container:not(.expanded) .control-btn.prev-btn,
.options-container:not(.expanded) .control-btn.next-btn,
.options-container:not(.expanded) .control-btn.pause-play-btn {
     opacity: 1; /* Explicitly visible */
     pointer-events: auto; /* Explicitly clickable */
}


/* Toggle Expand/Collapse Icon Visibility */
.options-container.expanded .control-btn.toggle-expand-btn .expand-icon { display: none; }
.options-container.expanded .control-btn.toggle-expand-btn .collapse-icon { display: inline-block; }
.options-container:not(.expanded) .control-btn.toggle-expand-btn .expand-icon { display: inline-block; }
.options-container:not(.expanded) .control-btn.toggle-expand-btn .collapse-icon { display: none; }


/* Responsive Adjustments */
@media (max-width: 768px) {
    .carousel-prompt { font-size: var(--text-sm); padding-left: 1rem; }
    .carousel-link { font-size: var(--text-xs); }
    .control-btn { width: 36px; height: 36px; }
    .control-btn .icon { width: 18px; height: 18px; }
    .options-container { padding-bottom: 3.5rem; }
    .carousel-items-wrapper {
         /* Adjust height for mobile */
         height: 7rem; /* Increase slightly for mobile */
    }
}

@media (max-width: 480px) {
   .carousel-prompt { font-size: calc(var(--text-sm) * 0.95); }
   .carousel-items-wrapper {
        /* Adjust height for very small screens */
        height: 8rem;
    }
}